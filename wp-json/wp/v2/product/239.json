{"id":239,"date":"2019-06-26T20:01:45","date_gmt":"2019-06-26T20:01:45","guid":{"rendered":"https:\/\/research.dwi.ufl.edu\/people\/angelos\/?post_type=product&#038;p=239"},"modified":"2024-02-19T19:25:20","modified_gmt":"2024-02-19T19:25:20","slug":"programming-for-humanists","status":"publish","type":"product","link":"https:\/\/codingplusfun.com\/page\/programming-for-humanists\/","title":{"rendered":"Programming for Humanists"},"content":{"rendered":"<p><iframe loading=\"lazy\" src=\"https:\/\/www.youtube.com\/embed\/DOQcUWMz8xU?feature=oembed\" width=\"1200\" height=\"600\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\n<p>The purpose of this project is to introduce computer programming in humanities curricula by establishing a correspondence between natural languages and computer languages. The exercises discussed here show how you can transcribe into code: 1) a theatrical play in English (Shakespeare&#8217;s Romeo and Juliet), 2) the common notions in Ancient Greek from Euclide&#8217;s Elements Book 1, and 3) calculate the discrepancy between Julian and Gregorian calendar using Pope Gregory&#8217;s XIII documents in Latin.<\/p>\n<p>The framework uses a tool that instantly presents computer code into natural language in English, Spanish (Espa\u00f1ol), German (Deutsch), Italian (Italiano), Greek (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), Turkish (T\u00fcrk\u00e7e) etc. as well as ancient languages such as Ancient Greek (\u1f19\u03bb\u03bb\u03b7\u03bd\u03b9\u03c3\u03c4\u1f76) and Latin (Lingua Latina).<\/p>\n<p>The scientific content of this presentation can be found in this article:<br \/>\nBarmpoutis, A., 2018. Learning Programming Languages as Shortcuts to Natural Language Token Replacements. Proceedings of the 18th Koli Calling International Conference on Computing Education Research, pp. 1-10.\u00a0<a href=\"https:\/\/research.dwi.ufl.edu\/people\/angelos\/page\/learning-programming-languages-as-shortcuts-to-natural-language-token-replacements\/\">Download PDF<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>The purpose of this project is to introduce computer programming in humanities curricula by establishing a correspondence between natural languages and computer languages. The exercises discussed here show how you can transcribe into code: 1) a theatrical play in English (Shakespeare&#8217;s Romeo and Juliet), 2) the common notions in Ancient Greek from Euclide&#8217;s Elements Book 1, and 3) calculate the discrepancy between Julian and Gregorian calendar using Pope Gregory&#8217;s XIII documents in Latin.<\/p>\n","protected":false},"featured_media":206,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/codingplusfun.com\/wp-json\/wp\/v2\/product\/239"}],"collection":[{"href":"https:\/\/codingplusfun.com\/wp-json\/wp\/v2\/product"}],"about":[{"href":"https:\/\/codingplusfun.com\/wp-json\/wp\/v2\/types\/product"}],"replies":[{"embeddable":true,"href":"https:\/\/codingplusfun.com\/wp-json\/wp\/v2\/comments?post=239"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/codingplusfun.com\/wp-json\/wp\/v2\/media\/206"}],"wp:attachment":[{"href":"https:\/\/codingplusfun.com\/wp-json\/wp\/v2\/media?parent=239"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}